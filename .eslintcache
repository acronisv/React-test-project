[{"D:\\Web\\React\\src\\index.js":"1","D:\\Web\\React\\src\\reportWebVitals.js":"2","D:\\Web\\React\\src\\App.js":"3","D:\\Web\\React\\src\\redux\\redux-store.js":"4","D:\\Web\\React\\src\\redux\\profile-reducer.js":"5","D:\\Web\\React\\src\\redux\\dialogs-reducer.js":"6","D:\\Web\\React\\src\\redux\\sidebar-reducer.js":"7","D:\\Web\\React\\src\\redux\\posts-reducer.js":"8","D:\\Web\\React\\src\\redux\\auth-reducer.js":"9","D:\\Web\\React\\src\\redux\\users-reducer.js":"10","D:\\Web\\React\\src\\components\\Aside\\AsideContainer.jsx":"11","D:\\Web\\React\\src\\components\\Posts\\PostsContainer.jsx":"12","D:\\Web\\React\\src\\components\\Dialogs\\DialogsContainer.jsx":"13","D:\\Web\\React\\src\\components\\Users\\UsersContainer.jsx":"14","D:\\Web\\React\\src\\components\\Profile\\ProfileContainer.jsx":"15","D:\\Web\\React\\src\\components\\Header\\HeaderContainer.jsx":"16","D:\\Web\\React\\src\\components\\Dialogs\\Dialogs.jsx":"17","D:\\Web\\React\\src\\components\\Aside\\Aside.jsx":"18","D:\\Web\\React\\src\\components\\Posts\\Posts.jsx":"19","D:\\Web\\React\\src\\api\\api.js":"20","D:\\Web\\React\\src\\components\\common\\preloader\\preloader.js":"21","D:\\Web\\React\\src\\components\\Header\\Header.jsx":"22","D:\\Web\\React\\src\\components\\Profile\\Profile.jsx":"23","D:\\Web\\React\\src\\components\\Users\\Users.jsx":"24","D:\\Web\\React\\src\\components\\Dialogs\\Dialog\\Dialog.jsx":"25","D:\\Web\\React\\src\\components\\Aside\\Friends\\Friends.jsx":"26","D:\\Web\\React\\src\\components\\Posts\\Post\\Post.jsx":"27","D:\\Web\\React\\src\\components\\Dialogs\\Message\\Message.jsx":"28","D:\\Web\\React\\src\\components\\Login\\Login.jsx":"29","D:\\Web\\React\\src\\hoc\\withAuthRedirect.js":"30","D:\\Web\\React\\src\\components\\Profile\\ProfileStatus.jsx":"31","D:\\Web\\React\\src\\components\\Dialogs\\MessageForm.jsx":"32","D:\\Web\\React\\src\\components\\Posts\\PostForm.jsx":"33","D:\\Web\\React\\src\\utils\\validators.js":"34","D:\\Web\\React\\src\\components\\common\\FormsControls\\FormsControls.js":"35","D:\\Web\\React\\src\\redux\\app-reducer.js":"36","D:\\Web\\React\\src\\redux\\users-selectors.js":"37","D:\\Web\\React\\src\\components\\Profile\\ProfileStatusWithHooks.jsx":"38"},{"size":1022,"mtime":1643218814281,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1637355858330,"results":"41","hashOfConfig":"40"},{"size":1538,"mtime":1643153782936,"results":"42","hashOfConfig":"40"},{"size":907,"mtime":1643153782939,"results":"43","hashOfConfig":"40"},{"size":1547,"mtime":1643390260281,"results":"44","hashOfConfig":"40"},{"size":973,"mtime":1642731213880,"results":"45","hashOfConfig":"40"},{"size":535,"mtime":1642433634488,"results":"46","hashOfConfig":"40"},{"size":2459,"mtime":1642811455727,"results":"47","hashOfConfig":"40"},{"size":2075,"mtime":1643153782939,"results":"48","hashOfConfig":"40"},{"size":4730,"mtime":1643218808282,"results":"49","hashOfConfig":"40"},{"size":298,"mtime":1640306436502,"results":"50","hashOfConfig":"40"},{"size":493,"mtime":1643215974465,"results":"51","hashOfConfig":"40"},{"size":887,"mtime":1643210460791,"results":"52","hashOfConfig":"40"},{"size":3673,"mtime":1643295318313,"results":"53","hashOfConfig":"40"},{"size":1732,"mtime":1643216062154,"results":"54","hashOfConfig":"40"},{"size":557,"mtime":1643153782936,"results":"55","hashOfConfig":"40"},{"size":1066,"mtime":1642731260984,"results":"56","hashOfConfig":"40"},{"size":671,"mtime":1640306436501,"results":"57","hashOfConfig":"40"},{"size":498,"mtime":1643213047581,"results":"58","hashOfConfig":"40"},{"size":1331,"mtime":1643330113014,"results":"59","hashOfConfig":"40"},{"size":229,"mtime":1641488411394,"results":"60","hashOfConfig":"40"},{"size":669,"mtime":1642903567137,"results":"61","hashOfConfig":"40"},{"size":669,"mtime":1643300755400,"results":"62","hashOfConfig":"40"},{"size":2445,"mtime":1642515499239,"results":"63","hashOfConfig":"40"},{"size":326,"mtime":1637355858323,"results":"64","hashOfConfig":"40"},{"size":233,"mtime":1640306436502,"results":"65","hashOfConfig":"40"},{"size":210,"mtime":1637355858325,"results":"66","hashOfConfig":"40"},{"size":211,"mtime":1637355858324,"results":"67","hashOfConfig":"40"},{"size":1894,"mtime":1643210176213,"results":"68","hashOfConfig":"40"},{"size":609,"mtime":1642376156053,"results":"69","hashOfConfig":"40"},{"size":1542,"mtime":1643383239987,"results":"70","hashOfConfig":"40"},{"size":732,"mtime":1642894709369,"results":"71","hashOfConfig":"40"},{"size":780,"mtime":1642894822274,"results":"72","hashOfConfig":"40"},{"size":418,"mtime":1642861828387,"results":"73","hashOfConfig":"40"},{"size":1415,"mtime":1642894949049,"results":"74","hashOfConfig":"40"},{"size":843,"mtime":1643154757726,"results":"75","hashOfConfig":"40"},{"size":704,"mtime":1643295300740,"results":"76","hashOfConfig":"40"},{"size":1240,"mtime":1643411210889,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1jirscr",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web\\React\\src\\index.js",[],["162","163"],"D:\\Web\\React\\src\\reportWebVitals.js",[],"D:\\Web\\React\\src\\App.js",[],"D:\\Web\\React\\src\\redux\\redux-store.js",[],"D:\\Web\\React\\src\\redux\\profile-reducer.js",["164"],"D:\\Web\\React\\src\\redux\\dialogs-reducer.js",[],"D:\\Web\\React\\src\\redux\\sidebar-reducer.js",[],"D:\\Web\\React\\src\\redux\\posts-reducer.js",[],"D:\\Web\\React\\src\\redux\\auth-reducer.js",[],"D:\\Web\\React\\src\\redux\\users-reducer.js",["165","166","167"],"import { usersAPI } from \"../api/api\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    usersList: [\r\n        // { id: 1, name: 'John S.', status:'I am a bitch', followed: true, location:{country: 'Westeros', city: 'Winterfell'} },\r\n        // { id: 2, name: 'Ned S. ', status:'I am a boss', followed: true, location:{country: 'Westeros', city: 'Winterfell'} },\r\n        // { id: 3, name: 'Daenerys T.', status:'I am a bitch', followed: false, location:{country: 'Westeros', city: 'Dragonstone'} },\r\n        // { id: 4, name: 'Jaime L.', status:'I am a boss', followed: false, location:{country: 'Westeros', city: 'Casterly rock'} },\r\n    ],\r\n    pageSize: 3,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 1\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        // uncomment to test reselect #83\r\n        // case \"FAKE\": {\r\n        //     return {...state, fake: state.fake + 1}\r\n        // }\r\n        case FOLLOW:\r\n            return {...state,\r\n                usersList: state.usersList.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {...state,\r\n                usersList: state.usersList.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, usersList: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return{...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return{...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return{...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return{...state,\r\n                followingInProgress: action.isFetching \r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id=>id != action.userId)] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalUsersCount\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleFollowingProgress= (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(response=>{\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(response.items))\r\n            dispatch(setTotalUsersCount(response.totalCount))\r\n        })\r\n    }  \r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(followSuccess(userId)) \r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(unfollowSuccess(userId)) \r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport default usersReducer","D:\\Web\\React\\src\\components\\Aside\\AsideContainer.jsx",[],"D:\\Web\\React\\src\\components\\Posts\\PostsContainer.jsx",[],"D:\\Web\\React\\src\\components\\Dialogs\\DialogsContainer.jsx",["168"],"import Dialogs from './Dialogs'\r\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\n// Было\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n// export default connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n\r\n//Стало с compose\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n","D:\\Web\\React\\src\\components\\Users\\UsersContainer.jsx",["169","170"],"import React from 'react'\r\nimport Users from './Users'\r\nimport { connect } from 'react-redux'\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers} from '../../redux/users-reducer'\r\nimport { getUsersList, getUsersSelector, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/users-selectors'\r\nimport Preloader from '../common/preloader/preloader'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n    render() {\r\n        // uncomment to test reselect #83\r\n        //console.log('Users page render')\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount = {this.props.totalUsersCount}\r\n                      pageSize = {this.props.pageSize}\r\n                      currentPage = {this.props.currentPage}\r\n                      users = {this.props.users}\r\n                      follow = {this.props.follow}\r\n                      unfollow = {this.props.unfollow}\r\n                      onPageChanged={this.onPageChanged}\r\n                      followingInProgress={this.props.followingInProgress}\r\n                      />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.usersList,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(\"mapStateToProps\")\r\n    return {\r\n        // uncomment to test reselect #83\r\n        //users: getUsersList(state),\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userID) => {\r\n//             dispatch(followActionCreator(userID))\r\n//         },\r\n//         unfollow: (userID) => {\r\n//             dispatch(unfollowActionCreator(userID))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUserActionCreator(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageActionCreator(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalUsersCount) => {\r\n//             dispatch(setTotalUsersCountActionCreator(totalUsersCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingActionCreator(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n//Было\r\n// let AuthRedirectComponent = withAuthRedirect(UsersContainer)\r\n// export default connect(mapStateToProps, {\r\n//     follow,\r\n//     unfollow,\r\n//     setCurrentPage,\r\n//     toggleFollowingProgress,\r\n//     getUsers\r\n// })(AuthRedirectComponent)\r\n\r\n\r\n//Стало с compose\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage,\r\n        toggleFollowingProgress, getUsers\r\n    }),\r\n)(UsersContainer)","D:\\Web\\React\\src\\components\\Profile\\ProfileContainer.jsx",["171","172"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\nimport PostsContainer from '../Posts/PostsContainer';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) {\r\n            userId = this.props.autorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        \r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n                <PostsContainer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n//Было\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n// let withUrlDataCointainerComponent= withRouter(AuthRedirectComponent)\r\n// export default connect(mapStateToProps, {getUserProfile})(withUrlDataCointainerComponent)\r\n\r\n//Стало с compose\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)","D:\\Web\\React\\src\\components\\Header\\HeaderContainer.jsx",[],"D:\\Web\\React\\src\\components\\Dialogs\\Dialogs.jsx",[],"D:\\Web\\React\\src\\components\\Aside\\Aside.jsx",[],"D:\\Web\\React\\src\\components\\Posts\\Posts.jsx",[],"D:\\Web\\React\\src\\api\\api.js",[],"D:\\Web\\React\\src\\components\\common\\preloader\\preloader.js",[],"D:\\Web\\React\\src\\components\\Header\\Header.jsx",[],"D:\\Web\\React\\src\\components\\Profile\\Profile.jsx",["173","174"],"import React from 'react'\r\nimport Preloader from '../common/preloader/preloader'\r\nimport PostsContainer from '../Posts/PostsContainer'\r\nimport ProfileStatus from '../Profile/ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Profile</h2>\r\n            <img src={props.profile.photos.large} alt=\"avatar\"></img>\r\n            <p>{props.profile.fullName}</p>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\Web\\React\\src\\components\\Users\\Users.jsx",["175","176"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport noImg from './../../assets/no-image.png'\r\nimport usersStyle from './Users.module.css'\r\nimport * as axios from 'axios'\r\nimport { UsersApi } from '../../api/api'\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n        let pages = []\r\n\r\n        for (let i=1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n            if( i>50) {\r\n                break\r\n            }\r\n        }\r\n    return (\r\n        \r\n        <div>\r\n            <div>\r\n                {pages.map(p=>{\r\n                    return <span onClick={(e)=>{props.onPageChanged(p)}}className={props.currentPage === p ? usersStyle.selectedPage : null}>{p} </span>\r\n                })}\r\n\r\n            </div>\r\n            {\r\n                props.users.map(user => <div key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button disabled={props.followingInProgress.some(id=>id===user.id)} onClick={() => { \r\n                                    props.unfollow(user.id)\r\n                                }}>Unfollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id=>id===user.id)} onClick={() => { \r\n                                    props.follow(user.id)\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                    </span>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/'+user.id}>\r\n                                <img src={user.photos.small !=null ?user.photos.small :noImg} alt=\"small-img\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                    <br></br>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","D:\\Web\\React\\src\\components\\Dialogs\\Dialog\\Dialog.jsx",[],"D:\\Web\\React\\src\\components\\Aside\\Friends\\Friends.jsx",[],"D:\\Web\\React\\src\\components\\Posts\\Post\\Post.jsx",[],"D:\\Web\\React\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\Web\\React\\src\\components\\Login\\Login.jsx",[],"D:\\Web\\React\\src\\hoc\\withAuthRedirect.js",[],"D:\\Web\\React\\src\\components\\Profile\\ProfileStatus.jsx",["177"],"D:\\Web\\React\\src\\components\\Dialogs\\MessageForm.jsx",[],"D:\\Web\\React\\src\\components\\Posts\\PostForm.jsx",[],"D:\\Web\\React\\src\\utils\\validators.js",[],"D:\\Web\\React\\src\\components\\common\\FormsControls\\FormsControls.js",[],"D:\\Web\\React\\src\\redux\\app-reducer.js",["178","179"],"import { authAPI } from './../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { getAuthUserData } from './auth-reducer'\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => {\r\n    return {\r\n        type: SET_INITIALIZED\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (\r\n        (dispatch) => {\r\n            let promise = dispatch(getAuthUserData())\r\n            promise.then(()=>{dispatch(setInitialized())})\r\n            \r\n        })\r\n}\r\n\r\nexport default appReducer","D:\\Web\\React\\src\\redux\\users-selectors.js",[],"D:\\Web\\React\\src\\components\\Profile\\ProfileStatusWithHooks.jsx",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":22,"nodeType":"186","messageId":"187","endLine":1,"endColumn":30},{"ruleId":"188","severity":1,"message":"189","line":62,"column":67,"nodeType":"190","messageId":"191","endLine":62,"endColumn":69},{"ruleId":"188","severity":1,"message":"192","line":134,"column":42,"nodeType":"190","messageId":"191","endLine":134,"endColumn":44},{"ruleId":"188","severity":1,"message":"192","line":147,"column":42,"nodeType":"190","messageId":"191","endLine":147,"endColumn":44},{"ruleId":"184","severity":1,"message":"193","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":18},{"ruleId":"184","severity":1,"message":"194","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":22},{"ruleId":"184","severity":1,"message":"195","line":7,"column":10,"nodeType":"186","messageId":"187","endLine":7,"endColumn":26},{"ruleId":"184","severity":1,"message":"193","line":6,"column":10,"nodeType":"186","messageId":"187","endLine":6,"endColumn":18},{"ruleId":"184","severity":1,"message":"195","line":7,"column":9,"nodeType":"186","messageId":"187","endLine":7,"endColumn":25},{"ruleId":"184","severity":1,"message":"196","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":22},{"ruleId":"184","severity":1,"message":"197","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":21},{"ruleId":"184","severity":1,"message":"198","line":5,"column":13,"nodeType":"186","messageId":"187","endLine":5,"endColumn":18},{"ruleId":"184","severity":1,"message":"199","line":6,"column":10,"nodeType":"186","messageId":"187","endLine":6,"endColumn":18},{"ruleId":"184","severity":1,"message":"197","line":3,"column":7,"nodeType":"186","messageId":"187","endLine":3,"endColumn":20},{"ruleId":"184","severity":1,"message":"200","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":17},{"ruleId":"184","severity":1,"message":"201","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":20},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'usersAPI' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Redirect' is defined but never used.","'getUsersList' is defined but never used.","'withAuthRedirect' is defined but never used.","'PostsContainer' is defined but never used.","'ProfileStatus' is defined but never used.","'axios' is defined but never used.","'UsersApi' is defined but never used.","'authAPI' is defined but never used.","'stopSubmit' is defined but never used.","no-global-assign","no-unsafe-negation"]